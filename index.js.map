{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { getPhoto } from '../main';\n\nconst userConteinerUL = document.querySelector('.users-list');\n\nconst input = document.querySelector('input');\nconst gallery = document.querySelector('.gallery');\nlet Lightbox = new SimpleLightbox('.gallery a ', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function renderGallery() {\n  const form = document.querySelector('form');\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n    const searchTerm = input.value; // Получаем поисковый запрос от пользователя\n    userConteinerUL.innerHTML = ''; // Очищаем контейнер перед новым запросом\n    input.value = '';\n\n    getPhoto(searchTerm).then(data => {\n      const originalArray = data;\n\n      const arrDataHTML = originalArray\n        .map(\n          data1 => `\n          <li class=\"list-photo\">\n<div class=\"gallery\">\n    <a href=\"${data1.largeImageURL}\" class=\"gallery-item\">\n          <img src=\"${data1.webformatURL}\" alt=\"${data1.tags}\" loading=\"lazy\" />\n</div>\n              <div class=\"container-total\">\n               <div class=\"item\">\n                <h2 class=\"head-photo\">likes</h2>\n                <p class=\"total-photo\">${data1.likes}</p>\n                 </div>\n                  <div class=\"item\">\n                <h2 class=\"head-photo\">views</h2>\n                 <p class=\"total-photo\">${data1.views}</p>\n                </div>\n                  <div class=\"item\">\n                <h2 class=\"head-photo\">comments</h2>\n                <p class=\"total-photo\">${data1.comments}</p>\n                </div>\n                  <div class=\"item\">\n                 <h2 class=\"head-photo\">downloads</h2>\n                 <p class=\"total-photo\">${data1.downloads}</p>\n                 </div>\n              </div>\n               </div>\n             </li>\n          `\n        )\n        .join('');\n      userConteinerUL.insertAdjacentHTML('beforeend', arrDataHTML);\n      Lightbox.refresh();\n    });\n  });\n}\n\nexport function hideLoader() {\n  document.querySelector('.loader').classList.add('hidden');\n}\n","import iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { API_KEY, BASE_URL } from './js/pixabay-api';\nimport { renderGallery } from './js/render-functions';\nimport { hideLoader } from './js/render-functions';\nexport function getPhoto(searchTerm) {\n  if (!searchTerm.trim()) {\n    iziToast.warning({\n      message: 'Введите поисковый запрос.',\n      backgroundColor: '#FF851B',\n      messageSize: 16,\n      messageColor: '#FFF',\n      iconColor: '',\n      titleColor: '#FAFAFB',\n      icon: 'warning-outline',\n      titleSize: 16,\n      messageLineHeight: 24,\n    });\n    return Promise.resolve([]); // Возвращаем пустой массив\n  }\n\n  const OPTIONS = {\n    q: searchTerm,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n\n  //   iziToast.show();\n  function fetchSearch(searchQuary) {\n    return fetch(`${BASE_URL}?key=${API_KEY}&q=${searchTerm}`, {\n      method: 'POST',\n      body: OPTIONS,\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Что-то пошло не так');\n        }\n        return response.json();\n      })\n      .then(data2 => {\n        hideLoader();\n        const arrData = data2.hits;\n        if (arrData.length === 0) {\n          // Массив пустой, выведите сообщение\n          iziToast.show({\n            message:\n              'Sorry, there are no images matching your search query. Please try again!',\n            backgroundColor: '#0074D9',\n            messageSize: 16,\n            messageColor: '#FFF',\n            iconColor: '',\n            titleColor: '#FAFAFB',\n            icon: 'info-outline',\n            titleSize: 16,\n            messageLineHeight: 24,\n          });\n        }\n\n        return arrData;\n      });\n  }\n}\n\nfetchSearch(OPTIONS.q);\nrenderGallery();\n"],"names":["userConteinerUL","input","Lightbox","SimpleLightbox","renderGallery","event","searchTerm","getPhoto","data","arrDataHTML","data1","iziToast"],"mappings":"6vBAIA,MAAMA,EAAkB,SAAS,cAAc,aAAa,EAEtDC,EAAQ,SAAS,cAAc,OAAO,EAC5B,SAAS,cAAc,UAAU,EACjD,IAAIC,EAAW,IAAIC,EAAe,cAAe,CAC/C,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,GAAgB,CACjB,SAAS,cAAc,MAAM,EACrC,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAaL,EAAM,MACzBD,EAAgB,UAAY,GAC5BC,EAAM,MAAQ,GAEdM,EAASD,CAAU,EAAE,KAAKE,GAAQ,CAGhC,MAAMC,EAFgBD,EAGnB,IACCE,GAAS;AAAA;AAAA;AAAA,eAGJA,EAAM,aAAa;AAAA,sBACZA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,yCAKnBA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,0CAIVA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,yCAIZA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,0CAIbA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,WAMhD,EACA,KAAK,EAAE,EACVV,EAAgB,mBAAmB,YAAaS,CAAW,EAC3DP,EAAS,QAAO,CACtB,CAAK,CACL,CAAG,CACH,CCrDO,SAASK,EAASD,EAAY,CACnC,GAAI,CAACA,EAAW,OACd,OAAAK,EAAS,QAAQ,CACf,QAAS,4BACT,gBAAiB,UACjB,YAAa,GACb,aAAc,OACd,UAAW,GACX,WAAY,UACZ,KAAM,kBACN,UAAW,GACX,kBAAmB,EACzB,CAAK,EACM,QAAQ,QAAQ,CAAA,CAAE,CA4C7B,CAEA,YAAY,QAAQ,CAAC,EACrBP,EAAe"}